package collage;

import java.nio.ByteBuffer;

public class IPacketDatagramPacket {
  /**
   * IPacket number in stream
   */
  private long iPacketNum;
  /**
   * Index of this IPacket frame, relative to its other frames
   */
  private int iPacketFrameIndex;
  /**
   * Number of frames composing this IPacket
   */
  private int iPacketNumFrames;
  /**
   * Frame length in bytes
   */
  private int iPacketFrameLength;
  /**
   * Frame byte data
   */
  private byte[] iPacketFrame;
  private byte[] packetData;
  
  public IPacketDatagramPacket(long iPacketNum, int iPacketFrameIndex,
      int iPacketNumFrames, int iPacketFrameLength, byte[] iPacketFrame) {
    this.iPacketNum = iPacketNum;
    this.iPacketFrameIndex = iPacketFrameIndex;
    this.iPacketNumFrames = iPacketNumFrames;
    this.iPacketFrameLength = iPacketFrameLength;
    this.iPacketFrame = iPacketFrame;
    if (iPacketFrame.length != iPacketFrameLength)
      throw new IllegalArgumentException("iPacketFrameLength: " + iPacketFrameLength + " != iPacketFrame.length: " + iPacketFrame.length);
    ByteBuffer buf = ByteBuffer.allocate(iPacketFrameLength);
  }
  
}
