package collage;

import com.xuggle.xuggler.IStreamCoder;

public class RTSPRequestPacket extends RTSPPacket {
  private Request reqType = null;
  private Integer rtspSeqNum = null;
  private Integer sessionNum = null;
  private String url = null;

  private String data = null;
  
  public RTSPRequestPacket(Request reqType, String url, Integer rtspSeqNum, Integer sessionNum) throws IllegalArgumentException {
    this.reqType = reqType;
    this.rtspSeqNum = rtspSeqNum;
    this.sessionNum = sessionNum;
    this.url = url;
    
    encode();
  }
  
  private String encodeMethod() {
    return reqType.toString() + " " + url + " " + RTSP_VERSION + CRLF;
  }
  private String encodeSeqNum() {
    return "CSeq: " + rtspSeqNum + CRLF;
  }
  private String encodeSessionNum() {
    String ret = "";
    if (sessionNum != null)
      ret = "Session: " + sessionNum + CRLF;
    return ret;
  }
  private void encode() {
    String encodedPacket = "";
    encodedPacket += encodeMethod();
    encodedPacket += encodeSeqNum();
    encodedPacket += encodeSessionNum();
    this.data = encodedPacket;
  }
  
  public String toString() {
    return data;
  }

  public Request reqType() { return reqType; }
  public void setReqType(Request reqType) {
    this.reqType = reqType;
  }

  public Integer rtspSeqNum() {
    return rtspSeqNum;
  }
  public void setRtspSeqNum(Integer rtspSeqNum) {
    this.rtspSeqNum = rtspSeqNum;
  }

  public Integer sessionNum() {
    return sessionNum;
  }
  public void setSessionNum(Integer sessionNum) {
    this.sessionNum = sessionNum;
  }

  public String url() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  public String data() {
    return data;
  }
  public void setData(String data) {
    this.data = data;
  }
}
